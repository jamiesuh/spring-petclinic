pipeline {
    agent any
    tools {
        maven 'M3'
        jdk 'JDK11'
    }
  
  stages {
    stage('Git fatch') {
      steps {
        echo 'git fatch'
         git url: 'https://github.com/jamiesuh/spring-petclinic.git/',
             branch: 'main', credentialsId: 'gitCredential'
      }
    }
    stage('Maven Build') {
      steps {
        echo 'maven build'
        sh 'mvn -Dmaven.test.failure.ignore=true clean package'
      }
    }  
    stage('Target workload') {
      steps {
        echo 'target workload'
        sshPublisher(publishers: [sshPublisherDesc(configName: 'target',
        transfers: [sshTransfer(cleanRemote: false, excludes: '',
        execCommand: '''
        fuser -k 8080/tcp
        export BUILD_ID=PetClinic
        nohup java -jar /home/ubuntu/deploy/spring-petclinic-2.7.3.jar >> nohup.out 2>&1 &''',
        execTimeout: 120000,
        flatten: false,
        makeEmptyDirs: false,
        noDefaultExcludes: false,
        patternSeparator: '[, ]+',
        remoteDirectory: 'deploy',
        remoteDirectorySDF: false, 
        removePrefix: 'target',
        sourceFiles: 'target/*.jar')],
        usePromotionTimestamp: false,
        useWorkspaceInPromotion: false,
        verbose: false)])
      }
    }  
    stage('Docker Image') {
      steps {
        echo 'docker image'
      }
    }  
    stage('Image Push') {
      steps {
        echo 'image push'
      }
    }
    stage('Codedeploy') {
      steps {
        echo 'codedeploy'
      }
    }
  }
}
